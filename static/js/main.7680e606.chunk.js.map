{"version":3,"sources":["index.js"],"names":["mapboxgl","accessToken","options","name","description","property","stops","ChoroplethMap","props","mapRef","React","createRef","state","active","this","setFill","tooltipContainer","document","createElement","map","Map","container","current","style","center","zoom","on","addSource","type","data","addLayer","id","source","popup","Popup","closeButton","closeOnClick","e","descriptions","countyName","features","properties","county_name","confirm_num","confirmed","confirm_10k","confirmed_per10k","confirm_bed","confirmed_per_bed","death_num","deaths","death_10k","death_per10k","confirm_daily","daily_confirmed","population","licensed_bed","licensed_hospital_bed","getCanvas","cursor","setLngLat","lngLat","setHTML","addTo","remove","setPaintProperty","ref","className","option","i","key","onChange","setState","checked","stop","backgroundColor","toLocaleString","Component","ReactDOM","render","getElementById"],"mappings":"0PAQAA,IAASC,YAAc,6FAGvB,IAAMC,EAAU,CAAC,CACfC,KAAM,YACNC,YAAa,6BACbC,SAAU,YACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,GAAI,WACL,CAAC,IAAK,WACN,CAAC,IAAK,WACN,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,IAAO,WACR,CAAC,IAAO,aAET,CACDH,KAAM,wBACNC,YAAa,gDACbC,SAAU,mBACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,KAAM,WACP,CAAC,KAAM,WACP,CAAC,KAAM,WACP,CAAC,MAAO,WACR,CAAC,GAAO,WACR,CAAC,MAAO,WACR,CAAC,OAAQ,aAEV,CACDH,KAAM,6BACNC,YAAa,uDACbC,SAAU,oBACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,KAAM,WACP,CAAC,IAAM,WACP,CAAC,KAAO,aAET,CACDH,KAAM,QACNC,YAAa,mBACbC,SAAU,SACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,EAAG,WACJ,CAAC,GAAI,WACL,CAAC,GAAI,WACL,CAAC,GAAI,WACL,CAAC,IAAK,WACN,CAAC,IAAK,WACN,CAAC,KAAM,aAER,CACDH,KAAM,0BACNC,YAAa,sCACbC,SAAU,eACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,IAAM,WACP,CAAC,KAAM,WACP,CAAC,KAAM,WACP,CAAC,KAAM,aAER,CACDH,KAAM,sBACNC,YAAa,mCACbC,SAAU,kBACVC,MAAO,CACL,CAAC,EAAG,WACJ,CAAC,GAAI,WACL,CAAC,GAAI,WACL,CAAC,IAAK,WACN,CAAC,IAAK,WACN,CAAC,IAAK,WACN,CAAC,IAAK,WACN,CAAC,KAAM,cAILC,E,kDAKJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IALRC,OAASC,IAAMC,YAMb,EAAKC,MAAQ,CAEXC,OAAQX,EAAQ,IAJD,E,iEASjBY,KAAKC,Y,0CAGc,IAAD,OAElBD,KAAKE,iBAAmBC,SAASC,cAAc,OAE/CJ,KAAKK,IAAM,IAAInB,IAASoB,IAAI,CAC1BC,UAAWP,KAAKL,OAAOa,QACvBC,MAAO,kCACPC,OAAQ,EAAE,GAAI,OACdC,KAAM,IAGRX,KAAKK,IAAIO,GAAG,QAAQ,WAClB,EAAKP,IAAIQ,UAAU,YAAa,CAC9BC,KAAM,UACNC,KAAM,qBAGR,EAAKV,IAAIQ,UAAU,SAAS,CAC1BC,KAAM,UACNC,KAAM,sBAIR,EAAKV,IAAIW,SAAS,CAChB,GAAM,gBACN,KAAQ,OACR,OAAU,SACV,OAAU,GACV,MAAS,CACT,aAAc,UACd,aAAc,OAIhB,EAAKX,IAAIW,SAAS,CAChBC,GAAI,YACJH,KAAM,OACNI,OAAQ,aACP,kBACH,EAAKjB,aAIP,IAAMkB,EAAQ,IAAIjC,IAASkC,MAAM,CAC/BC,aAAa,EACbC,cAAc,IAGhBtB,KAAKK,IAAIO,GAAG,YAAa,aAAa,SAACW,GACrC,IAAMC,EAAe,CAAC,CACpBC,WAAYF,EAAEG,SAAS,GAAGC,WAAWC,YACrCC,YAAaN,EAAEG,SAAS,GAAGC,WAAWG,UACtCC,YAAaR,EAAEG,SAAS,GAAGC,WAAWK,iBACtCC,YAAaV,EAAEG,SAAS,GAAGC,WAAWO,kBACtCC,UAAWZ,EAAEG,SAAS,GAAGC,WAAWS,OACpCC,UAAWd,EAAEG,SAAS,GAAGC,WAAWW,aACpCC,cAAehB,EAAEG,SAAS,GAAGC,WAAWa,gBACxCC,WAAYlB,EAAEG,SAAS,GAAGC,WAAWc,WACrCC,aAAcnB,EAAEG,SAAS,GAAGC,WAAWgB,wBAEzC,EAAKtC,IAAIuC,YAAYnC,MAAMoC,OAAS,UAEpC1B,EACC2B,UAAUvB,EAAEwB,QACZC,QAAQ,yCAAyCxB,EAAa,GAAGC,WAAW,yBACrED,EAAa,GAAGK,YAAY,sCAAsCL,EAAa,GAAGO,YAClF,2CAA2CP,EAAa,GAAGS,YAC3D,gCAAgCT,EAAa,GAAGW,UAChD,wCAAwCX,EAAa,GAAGa,UACxD,oCAAoCb,EAAa,GAAGe,cACpD,4CAA4Cf,EAAa,GAAGiB,WAC5D,uCAAuCjB,EAAa,GAAGkB,cAC9DO,MAAM,EAAK5C,QAGdL,KAAKK,IAAIO,GAAG,aAAc,aAAa,WACrC,EAAKP,IAAIuC,YAAYnC,MAAMoC,OAAS,GACpC1B,EAAM+B,c,gCAKC,IAAD,EACoBlD,KAAKF,MAAMC,OAA/BR,EADA,EACAA,SAAUC,EADV,EACUA,MAClBQ,KAAKK,IAAI8C,iBAAiB,YAAa,aAAc,CACnD5D,WACAC,UAEFQ,KAAKK,IAAI8C,iBAAiB,YAAa,eAAgB,O,+BAG/C,IAAD,SACwCnD,KAAKF,MAAMC,OAAlDV,EADD,EACCA,KAAMC,EADP,EACOA,YAAaE,EADpB,EACoBA,MAAOD,EAD3B,EAC2BA,SAoBlC,OACE,6BACE,yBAAK6D,IAAKpD,KAAKL,OAAQ0D,UAAU,mCACjC,yBAAKA,UAAU,uGACZjE,EAAQiB,KAbO,SAACiD,EAAQC,GAC7B,OACE,2BAAOC,IAAKD,EAAGF,UAAU,oBACvB,2BAAOI,SAAU,kBAAM,EAAKC,SAAS,CAAE3D,OAAQX,EAAQmE,MAAOI,QAASL,EAAO/D,WAAaA,EAAUF,KAAK,SAASyB,KAAK,UACxH,yBAAKuC,UAAU,yCAAyCC,EAAOjE,WAWjE,yBAAKgE,UAAU,uFACb,yBAAKA,UAAU,IACb,wBAAIA,UAAU,SAAShE,GACvB,uBAAGgE,UAAU,oBAAoB/D,IAElCE,EAAMa,KA7BY,SAACuD,EAAML,GAC9B,OACE,yBAAKC,IAAKD,EAAGF,UAAU,SACrB,0BAAMA,UAAU,mDAAmD5C,MAAO,CAAEoD,gBAAiBD,EAAK,MAClG,wCAAUA,EAAK,GAAGE,6B,GAnHAlE,IAAMmE,WAmJlCC,IAASC,OAAO,kBAACxE,EAAD,MAAmBU,SAAS+D,eAAe,oB","file":"static/js/main.7680e606.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport './main.css';\n//import county_data from './updated_04-04-20_UScounty.geojson';\n//import state_data from './us_states.geojson';\n\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FubWlzYW4iLCJhIjoiY2sxOWxqajdjMDB2ZzNpcGR5aW13MDYzcyJ9.WsMnhXizk5z3P2C351yBZQ';\n\n// Feature list that need to be visualized.\nconst options = [{\n  name: 'Confirmed',\n  description: 'Number of people confirmed',\n  property: 'confirmed',\n  stops: [\n    [0, '#fff5f0'],\n    [20, '#fee0d2'],\n    [100, '#fcbba1'],\n    [500, '#fc9272'],\n    [1000, '#fb6a4a'],\n    [5000, '#ef3b2c'],\n    [10000, '#cb181d'],\n    [50000, '#99000d']\n  ]\n}, {\n  name: 'Confirmed per 10K Pop',\n  description: 'Number of people confirmed per 10K population',\n  property: 'confirmed_per10k',\n  stops: [\n    [0, '#fff5f0'],\n    [2.03, '#fee0d2'],\n    [3.16, '#fcbba1'],\n    [8.46, '#fc9272'],\n    [12.61, '#fb6a4a'],\n    [20.00, '#ef3b2c'],\n    [50.37, '#cb181d'],\n    [102.19, '#99000d']\n  ]\n}, {\n  name: 'Confirmed per Hospital Bed',\n  description: 'Number of people confirmed per licensed hospital bed',\n  property: 'confirmed_per_bed',\n  stops: [\n    [0, '#fff5f0'],\n    [0.01, '#fee0d2'],\n    [0.08, '#fcbba1'],\n    [0.12, '#fc9272'],\n    [0.17, '#fb6a4a'],\n    [1.07, '#ef3b2c'],\n    [2.80, '#cb181d'],\n    [17.10, '#99000d']\n  ]\n}, {\n  name: 'Death',\n  description: 'Number of deaths',\n  property: 'deaths',\n  stops: [\n    [0, '#fff5f0'],\n    [5, '#fee0d2'],\n    [23, '#fcbba1'],\n    [39, '#fc9272'],\n    [66, '#fb6a4a'],\n    [124, '#ef3b2c'],\n    [200, '#cb181d'],\n    [2624, '#99000d']\n  ]\n}, {\n  name: 'Death Count per 10K Pop',\n  description: 'Number of deaths per 10K population',\n  property: 'death_per10k',\n  stops: [\n    [0, '#fff5f0'],\n    [0.03, '#fee0d2'],\n    [0.08, '#fcbba1'],\n    [0.42, '#fc9272'],\n    [0.58, '#fb6a4a'],\n    [1.28, '#ef3b2c'],\n    [2.26, '#cb181d'],\n    [3.93, '#99000d']\n  ]\n}, {\n  name: 'Daily New Confirmed',\n  description: 'Number of people confirmed daily',\n  property: 'daily_confirmed',\n  stops: [\n    [0, '#fff5f0'],\n    [20, '#fee0d2'],\n    [50, '#fcbba1'],\n    [100, '#fc9272'],\n    [200, '#fb6a4a'],\n    [400, '#ef3b2c'],\n    [900, '#cb181d'],\n    [1400, '#99000d']\n  ]\n}];\n\nclass ChoroplethMap extends React.Component {\n  mapRef = React.createRef();\n  map;\n  tooltipContainer;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // init first feature to display\n      active: options[0]\n    };\n  }\n\n  componentDidUpdate() {\n    this.setFill();\n  }\n\n  componentDidMount() {\n    // Container to put React generated content in.\n    this.tooltipContainer = document.createElement('div');\n\n    this.map = new mapboxgl.Map({\n      container: this.mapRef.current,\n      style: 'mapbox://styles/mapbox/dark-v10',\n      center: [-98, 38.88],\n      zoom: 3\n    });\n\n    this.map.on('load', () => {\n      this.map.addSource('countries', {\n        type: 'geojson',\n        data: 'UScounty.geojson'\n      });\n\n      this.map.addSource('states',{\n        type: 'geojson',\n        data: 'us_states.geojson'\n      });\n\n      // add state-borders\n      this.map.addLayer({\n        'id': 'state-borders',\n        'type': 'line',\n        'source': 'states',\n        'layout': {},\n        'paint': {\n        'line-color': '#fff5f0',\n        'line-width': 2.5\n        }\n      });\n\n      this.map.addLayer({\n        id: 'countries',\n        type: 'fill',\n        source: 'countries'\n      }, 'waterway-label');\n      this.setFill();\n    });\n\n    // Create a popup, but don't add it to the map yet.\n    const popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n      });\n\n    this.map.on('mousemove', 'countries', (e) => {\n      const descriptions = [{\n        countyName: e.features[0].properties.county_name,\n        confirm_num: e.features[0].properties.confirmed,\n        confirm_10k: e.features[0].properties.confirmed_per10k,\n        confirm_bed: e.features[0].properties.confirmed_per_bed,\n        death_num: e.features[0].properties.deaths,\n        death_10k: e.features[0].properties.death_per10k,\n        confirm_daily: e.features[0].properties.daily_confirmed,\n        population: e.features[0].properties.population,\n        licensed_bed: e.features[0].properties.licensed_hospital_bed\n      }];\n      this.map.getCanvas().style.cursor = 'pointer';\n\n      popup\n      .setLngLat(e.lngLat)\n      .setHTML('<b>Apr 22 2020</b></br><b>County: </b>'+descriptions[0].countyName+'<hr><b>Confirmed: </b>'+\n              descriptions[0].confirm_num+'</br><b>Confirmed per 10K Pop: </b>'+descriptions[0].confirm_10k+\n              '</br><b>Confirmed per Hospital Bed: </b>'+descriptions[0].confirm_bed+\n              '</br><b>Number of Death: </b>'+descriptions[0].death_num+\n              '</br><b>Death Count per 10K Pop: </b>'+descriptions[0].death_10k+\n              '</br><b>Daily New Confirmed: </b>'+descriptions[0].confirm_daily+\n              '</br>------------</br><b>Population: </b>'+descriptions[0].population+\n              '</br><b>Licensed Hospital Beds: </b>'+descriptions[0].licensed_bed)\n      .addTo(this.map);\n    });\n\n    this.map.on('mouseleave', 'countries', () => {\n      this.map.getCanvas().style.cursor = '';\n      popup.remove();\n    });\n    \n  }\n\n  setFill() {\n    const { property, stops } = this.state.active;\n    this.map.setPaintProperty('countries', 'fill-color', {\n      property,\n      stops\n    }); \n    this.map.setPaintProperty('countries', 'fill-opacity', 0.75);   \n  }\n\n  render() {\n    const { name, description, stops, property } = this.state.active;\n    // present legend\n    const renderLegendKeys = (stop, i) => {\n      return (\n        <div key={i} className='txt-s'>\n          <span className='mr6 round-full w12 h12 inline-block align-middle' style={{ backgroundColor: stop[1] }} />\n          <span>{`${stop[0].toLocaleString()}`}</span>\n        </div>\n      );\n    }\n    // present feature vis options\n    const renderOptions = (option, i) => {\n      return (\n        <label key={i} className=\"toggle-container\">\n          <input onChange={() => this.setState({ active: options[i] })} checked={option.property === property} name=\"toggle\" type=\"radio\" />\n          <div className=\"toggle txt-s py3 toggle--active-white\">{option.name}</div>\n        </label>\n      );\n    }\n\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"absolute top right left bottom\" />\n        <div className=\"toggle-group absolute top left ml12 mt12 border border--2 border--white bg-white shadow-darken10 z1\">\n          {options.map(renderOptions)}\n        </div>\n        <div className=\"bg-white absolute bottom right mr12 mb24 py12 px12 shadow-darken10 round z1 wmax180\">\n          <div className=''>\n            <h2 className=\"large\">{name}</h2>\n            <p className='txt-s color-gray'>{description}</p>\n          </div>\n          {stops.map(renderLegendKeys)}\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<ChoroplethMap />, document.getElementById('visualization'));\n"],"sourceRoot":""}